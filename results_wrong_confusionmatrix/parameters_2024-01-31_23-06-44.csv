Description; feature count; accuracy; true positive; false negative; false positive; true negative; false negative rate [%]; false positive rate [%]; AUC
DecisionTreeClassifier(); 462; 0.9791; 927; 11; 22; 621; 1.17; 3.42; 0.9770
DecisionTreeClassifier(); 462; 0.9766; 923; 15; 22; 621; 1.60; 3.42; 0.9749
DecisionTreeClassifier(criterion='entropy'); 462; 0.9747; 922; 16; 24; 619; 1.71; 3.73; 0.9728
DecisionTreeClassifier(criterion='log_loss'); 462; 0.9766; 925; 13; 24; 619; 1.39; 3.73; 0.9744
DecisionTreeClassifier(); 462; 0.9766; 922; 16; 21; 622; 1.71; 3.27; 0.9751
DecisionTreeClassifier(splitter='random'); 462; 0.9766; 924; 14; 23; 620; 1.49; 3.58; 0.9747
DecisionTreeClassifier(); 462; 0.9741; 922; 16; 25; 618; 1.71; 3.89; 0.9720
DecisionTreeClassifier(max_depth=5); 462; 0.9551; 935; 3; 68; 575; 0.32; 10.58; 0.9455
DecisionTreeClassifier(max_depth=10); 462; 0.9766; 935; 3; 34; 609; 0.32; 5.29; 0.9720
DecisionTreeClassifier(max_depth=15); 462; 0.9779; 933; 5; 30; 613; 0.53; 4.67; 0.9740
DecisionTreeClassifier(); 462; 0.9747; 922; 16; 24; 619; 1.71; 3.73; 0.9728
DecisionTreeClassifier(min_samples_split=4); 462; 0.9810; 930; 8; 22; 621; 0.85; 3.42; 0.9786
DecisionTreeClassifier(min_samples_split=6); 462; 0.9817; 926; 12; 17; 626; 1.28; 2.64; 0.9804
DecisionTreeClassifier(); 462; 0.9772; 924; 14; 22; 621; 1.49; 3.42; 0.9754
DecisionTreeClassifier(min_samples_leaf=2); 462; 0.9772; 930; 8; 28; 615; 0.85; 4.35; 0.9740
DecisionTreeClassifier(min_samples_leaf=4); 462; 0.9728; 927; 11; 32; 611; 1.17; 4.98; 0.9693
DecisionTreeClassifier(min_samples_leaf=6); 462; 0.9728; 925; 13; 30; 613; 1.39; 4.67; 0.9697
DecisionTreeClassifier(max_features='sqrt'); 462; 0.9620; 911; 27; 33; 610; 2.88; 5.13; 0.9599
DecisionTreeClassifier(max_features='log2'); 462; 0.9602; 920; 18; 45; 598; 1.92; 7.00; 0.9554
DecisionTreeClassifier(); 462; 0.9772; 925; 13; 23; 620; 1.39; 3.58; 0.9752
DecisionTreeClassifier(max_features=1); 462; 0.9595; 920; 18; 46; 597; 1.92; 7.15; 0.9546
DecisionTreeClassifier(max_features=5); 462; 0.9538; 920; 18; 55; 588; 1.92; 8.55; 0.9476
DecisionTreeClassifier(max_features=25); 462; 0.9658; 913; 25; 29; 614; 2.67; 4.51; 0.9641
DecisionTreeClassifier(max_features=100); 462; 0.9728; 921; 17; 26; 617; 1.81; 4.04; 0.9707
DecisionTreeClassifier(); 462; 0.9747; 921; 17; 23; 620; 1.81; 3.58; 0.9731
DecisionTreeClassifier(class_weight='balanced'); 462; 0.9614; 919; 19; 42; 601; 2.03; 6.53; 0.9572
DecisionTreeClassifier(class_weight={0: 1, 1: 2}); 462; 0.9583; 914; 24; 42; 601; 2.56; 6.53; 0.9545
DecisionTreeClassifier(class_weight={0: 2, 1: 1}); 462; 0.9753; 926; 12; 27; 616; 1.28; 4.20; 0.9726
DecisionTreeClassifier(class_weight={0: 1, 1: 5}); 462; 0.9595; 911; 27; 37; 606; 2.88; 5.75; 0.9568
DecisionTreeClassifier(class_weight={0: 5, 1: 1}); 462; 0.9715; 922; 16; 29; 614; 1.71; 4.51; 0.9689
MLPClassifier(); 462; 0.9836; 928; 10; 16; 627; 1.07; 2.49; 0.9822
MLPClassifier(hidden_layer_sizes=(50,)); 462; 0.9823; 927; 11; 17; 626; 1.17; 2.64; 0.9809
MLPClassifier(); 462; 0.9817; 926; 12; 17; 626; 1.28; 2.64; 0.9804
MLPClassifier(hidden_layer_sizes=(50, 50)); 462; 0.9823; 926; 12; 16; 627; 1.28; 2.49; 0.9812
MLPClassifier(hidden_layer_sizes=(100, 50)); 462; 0.9829; 926; 12; 15; 628; 1.28; 2.33; 0.9819
MLPClassifier(); 462; 0.9810; 927; 11; 19; 624; 1.17; 2.95; 0.9794
MLPClassifier(activation='logistic'); 462; 0.9810; 925; 13; 17; 626; 1.39; 2.64; 0.9799
MLPClassifier(activation='tanh'); 462; 0.9791; 926; 12; 21; 622; 1.28; 3.27; 0.9773
MLPClassifier(solver='lbfgs'); 462; 0.9779; 922; 16; 19; 624; 1.71; 2.95; 0.9767
MLPClassifier(); 462; 0.9817; 924; 14; 15; 628; 1.49; 2.33; 0.9809
MLPClassifier(); 462; 0.9817; 927; 11; 18; 625; 1.17; 2.80; 0.9801
MLPClassifier(alpha=0.001); 462; 0.9836; 930; 8; 18; 625; 0.85; 2.80; 0.9817
MLPClassifier(alpha=0.01); 462; 0.9810; 929; 9; 21; 622; 0.96; 3.27; 0.9789
MLPClassifier(); 462; 0.9823; 928; 10; 18; 625; 1.07; 2.80; 0.9807
MLPClassifier(learning_rate='invscaling'); 462; 0.9829; 927; 11; 16; 627; 1.17; 2.49; 0.9817
MLPClassifier(learning_rate='adaptive'); 462; 0.9829; 927; 11; 16; 627; 1.17; 2.49; 0.9817
MLPClassifier(max_iter=100); 462; 0.9817; 926; 12; 17; 626; 1.28; 2.64; 0.9804
MLPClassifier(); 462; 0.9823; 927; 11; 17; 626; 1.17; 2.64; 0.9809
MLPClassifier(max_iter=300); 462; 0.9842; 928; 10; 15; 628; 1.07; 2.33; 0.9830
SVC(); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(C=0.1); 462; 0.9443; 907; 31; 57; 586; 3.30; 8.86; 0.9392
SVC(C=1); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(C=10); 462; 0.9791; 925; 13; 20; 623; 1.39; 3.11; 0.9775
SVC(kernel='linear'); 462; 0.9715; 922; 16; 29; 614; 1.71; 4.51; 0.9689
SVC(); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(kernel='poly'); 462; 0.8324; 937; 1; 264; 379; 0.11; 41.06; 0.7942
SVC(kernel='sigmoid'); 462; 0.9766; 931; 7; 30; 613; 0.75; 4.67; 0.9729
SVC(degree=2); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(degree=4); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(gamma='auto'); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(gamma=0.1); 462; 0.8741; 742; 196; 3; 640; 20.90; 0.47; 0.8932
SVC(gamma=1); 462; 0.8197; 655; 283; 2; 641; 30.17; 0.31; 0.8476
SVC(); 462; 0.9760; 925; 13; 25; 618; 1.39; 3.89; 0.9736
SVC(class_weight='balanced'); 462; 0.9747; 921; 17; 23; 620; 1.81; 3.58; 0.9731
SVC(class_weight={0: 1, 1: 2}); 462; 0.9779; 923; 15; 20; 623; 1.60; 3.11; 0.9765
SVC(class_weight={0: 2, 1: 1}); 462; 0.9766; 928; 10; 27; 616; 1.07; 4.20; 0.9737
SVC(class_weight={0: 1, 1: 5}); 462; 0.9766; 917; 21; 16; 627; 2.24; 2.49; 0.9764
SVC(class_weight={0: 5, 1: 1}); 462; 0.9772; 930; 8; 28; 615; 0.85; 4.35; 0.9740
LinearRegression(); 462; 0.9620; 933; 5; 55; 588; 0.53; 8.55; 0.9546
LinearRegression(); 462; 0.9620; 933; 5; 55; 588; 0.53; 8.55; 0.9546
LinearRegression(fit_intercept=False); 462; 0.8431; 935; 3; 245; 398; 0.32; 38.10; 0.8079
LinearRegression(positive=True); 462; 0.9671; 933; 5; 47; 596; 0.53; 7.31; 0.9608
LinearRegression(); 462; 0.9620; 933; 5; 55; 588; 0.53; 8.55; 0.9546
LinearRegression(); 462; 0.9620; 933; 5; 55; 588; 0.53; 8.55; 0.9546
LinearRegression(n_jobs=-1); 462; 0.9620; 933; 5; 55; 588; 0.53; 8.55; 0.9546
KNeighborsClassifier(); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
KNeighborsClassifier(n_neighbors=3); 462; 0.9374; 928; 10; 89; 554; 1.07; 13.84; 0.9255
KNeighborsClassifier(); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
KNeighborsClassifier(n_neighbors=7); 462; 0.8994; 929; 9; 150; 493; 0.96; 23.33; 0.8786
KNeighborsClassifier(); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
KNeighborsClassifier(weights='distance'); 462; 0.9279; 932; 6; 108; 535; 0.64; 16.80; 0.9128
KNeighborsClassifier(); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
KNeighborsClassifier(algorithm='ball_tree'); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
KNeighborsClassifier(algorithm='kd_tree'); 462; 0.9203; 930; 8; 118; 525; 0.85; 18.35; 0.9040
KNeighborsClassifier(algorithm='brute'); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
KNeighborsClassifier(p=1); 462; 0.9165; 934; 4; 128; 515; 0.43; 19.91; 0.8983
KNeighborsClassifier(); 462; 0.9209; 930; 8; 117; 526; 0.85; 18.20; 0.9048
BernoulliNB(); 462; 0.9791; 932; 6; 27; 616; 0.64; 4.20; 0.9758
BernoulliNB(alpha=0.1); 462; 0.9810; 932; 6; 24; 619; 0.64; 3.73; 0.9781
BernoulliNB(alpha=0.5); 462; 0.9791; 932; 6; 27; 616; 0.64; 4.20; 0.9758
BernoulliNB(); 462; 0.9791; 932; 6; 27; 616; 0.64; 4.20; 0.9758
BernoulliNB(binarize=0.5); 462; 0.9791; 932; 6; 27; 616; 0.64; 4.20; 0.9758
BernoulliNB(); 462; 0.9791; 932; 6; 27; 616; 0.64; 4.20; 0.9758
BernoulliNB(fit_prior=False); 462; 0.9791; 932; 6; 27; 616; 0.64; 4.20; 0.9758
RandomForestClassifier(); 462; 0.9855; 933; 5; 18; 625; 0.53; 2.80; 0.9833
RandomForestClassifier(n_estimators=50); 462; 0.9848; 933; 5; 19; 624; 0.53; 2.95; 0.9826
RandomForestClassifier(); 462; 0.9842; 933; 5; 20; 623; 0.53; 3.11; 0.9818
RandomForestClassifier(n_estimators=200); 462; 0.9855; 933; 5; 18; 625; 0.53; 2.80; 0.9833
RandomForestClassifier(); 462; 0.9842; 932; 6; 19; 624; 0.64; 2.95; 0.9820
RandomForestClassifier(criterion='entropy'); 462; 0.9848; 933; 5; 19; 624; 0.53; 2.95; 0.9826
RandomForestClassifier(criterion='log_loss'); 462; 0.9855; 933; 5; 18; 625; 0.53; 2.80; 0.9833
RandomForestClassifier(); 462; 0.9848; 933; 5; 19; 624; 0.53; 2.95; 0.9826
RandomForestClassifier(max_depth=5); 462; 0.9481; 936; 2; 80; 563; 0.21; 12.44; 0.9367
RandomForestClassifier(max_depth=10); 462; 0.9677; 933; 5; 46; 597; 0.53; 7.15; 0.9616
RandomForestClassifier(max_depth=15); 462; 0.9766; 933; 5; 32; 611; 0.53; 4.98; 0.9725
RandomForestClassifier(); 462; 0.9861; 933; 5; 17; 626; 0.53; 2.64; 0.9841
RandomForestClassifier(min_samples_split=4); 462; 0.9842; 932; 6; 19; 624; 0.64; 2.95; 0.9820
RandomForestClassifier(min_samples_split=6); 462; 0.9848; 931; 7; 17; 626; 0.75; 2.64; 0.9830
RandomForestClassifier(); 462; 0.9855; 933; 5; 18; 625; 0.53; 2.80; 0.9833
RandomForestClassifier(min_samples_leaf=2); 462; 0.9823; 932; 6; 22; 621; 0.64; 3.42; 0.9797
RandomForestClassifier(min_samples_leaf=4); 462; 0.9791; 931; 7; 26; 617; 0.75; 4.04; 0.9761
RandomForestClassifier(min_samples_leaf=6); 462; 0.9766; 931; 7; 30; 613; 0.75; 4.67; 0.9729
RandomForestClassifier(); 462; 0.9848; 933; 5; 19; 624; 0.53; 2.95; 0.9826
RandomForestClassifier(max_features='log2'); 462; 0.9842; 933; 5; 20; 623; 0.53; 3.11; 0.9818
RandomForestClassifier(max_features=None); 462; 0.9779; 925; 13; 22; 621; 1.39; 3.42; 0.9760
RandomForestClassifier(max_features=1); 462; 0.9848; 934; 4; 20; 623; 0.43; 3.11; 0.9823
RandomForestClassifier(max_features=5); 462; 0.9842; 934; 4; 21; 622; 0.43; 3.27; 0.9815
RandomForestClassifier(max_features=25); 462; 0.9842; 933; 5; 20; 623; 0.53; 3.11; 0.9818
RandomForestClassifier(max_features=100); 462; 0.9810; 928; 10; 20; 623; 1.07; 3.11; 0.9791
RandomForestClassifier(); 462; 0.9861; 933; 5; 17; 626; 0.53; 2.64; 0.9841
RandomForestClassifier(class_weight='balanced'); 462; 0.9855; 933; 5; 18; 625; 0.53; 2.80; 0.9833
RandomForestClassifier(class_weight={0: 1, 1: 2}); 462; 0.9855; 934; 4; 19; 624; 0.43; 2.95; 0.9831
RandomForestClassifier(class_weight={0: 2, 1: 1}); 462; 0.9855; 933; 5; 18; 625; 0.53; 2.80; 0.9833
RandomForestClassifier(class_weight={0: 1, 1: 5}); 462; 0.9842; 933; 5; 20; 623; 0.53; 3.11; 0.9818
RandomForestClassifier(class_weight={0: 5, 1: 1}); 462; 0.9848; 932; 6; 18; 625; 0.64; 2.80; 0.9828
